
partial class SearchImpl {



@model linkClass (TClass tClass) <--

		TPackage next = this.getBasePackage(tClass.getPackage());
		TPackage match = null;
		for (TPackage p : pg.getPackages()) {
			if (p.getTName().compareTo(next.getTName()) == 0) {
				match = p;
			}
		}
		if (match == null) {
			pg.getPackages().add(next);
			return;
		} else {
			EList<TPackage> packages = match.getSubpackage();
			while (packages.size() > 0) {
				EList<TPackage> next_child = next.getSubpackage();
				if (next_child.size() > 0) {
					next = next_child.get(0);
					boolean success = false;
					for(TPackage p : packages){
						if(p.getTName().compareTo(next.getTName())==0){
							packages = p.getSubpackage();
							match = p;
							success = true;
							break;
						}
					}
					if(!success){
						break;
					}
				} else {
					match.getContainedClasses().add(tClass);
					return;
				}
			}
			EList<TPackage> next_child = next.getSubpackage();
			if (next_child.size() > 0) {
				match.getSubpackage().add(next_child.get(0));
			}
			else{
				match.getContainedClasses().add(tClass);
			}
			return;
		}
-->

}